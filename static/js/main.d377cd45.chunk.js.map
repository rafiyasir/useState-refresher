{"version":3,"sources":["App.js","index.js"],"names":["counter","App","useState","count","setCount","count1","setCount1","count2","setCount2","console","log","count3","setCount3","theme","state1","setState1","state2","setState2","count4","theme1","count5","theme2","className","onClick","prevCount","style","color","fontSize","backgroundColor","prevState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d377cd45.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport './App.css';\n\nlet counter = 0;\n  \nfunction countInitial() {\n  counter++;\n  console.log(`counter: ${counter}`);\n  return 4;\n}\n\nfunction App() {\n\n  const [count, setCount] = useState(1);\n  const [count1, setCount1] = useState(2);\n  const [count2, setCount2] = useState(3);\n  const [count3, setCount3] = useState(countInitial());\n  const [state1, setState1] = useState({count: 5, theme: \"#ffff00\"});\n  const [state2, setState2] = useState({count: 6, theme: \"#ffff00\"});\n\n  const count4 = state1.count;\n  const theme1 = state1.theme;\n\n  const count5 = state2.count;\n  const theme2 = state2.theme;\n\n  function decrementCount () {\n    setCount(count-1);\n  }\n  function decrementCount1 () {\n    setCount1(count1-1);\n    setCount1(count1-1);\n  }\n  function decrementCount2 () {\n    setCount2(prevCount => prevCount-1);\n    setCount2(prevCount => prevCount-1);\n  }\n  function decrementCount3 () {\n    setCount3(prevCount => prevCount-1);\n  }\n  function decrementCount4 () {\n    setState1(prevState => {\n      return {count: prevState.count-1}\n      });\n  }\n  function decrementCount5 () {\n    setState2(prevState => {\n      return {...prevState, count: prevState.count-1}\n      });\n  }\n\n  function incrementCount () {\n    setCount(count+1);\n  } \n  function incrementCount1 () {\n    setCount1(count1+1);\n    setCount1(count1+1);\n  } \n  function incrementCount2 () {\n    setCount2(prevCount => prevCount+1);\n    setCount2(prevCount => prevCount+1);\n  } \n  function incrementCount3 () {\n    setCount3(prevCount => prevCount+1);\n  } \n  function incrementCount4 () {\n    setState1(prevState => {\n      return {count: prevState.count+1}\n      });\n  } \n  function incrementCount5 () {\n    setState2(prevState => {\n      return {...prevState, count: prevState.count+1}\n      });\n  } \n  return (\n    <>\n      <h1>UseState</h1>\n      <div className=\"App\">\n        <pre className=\"left\">\n          {`const [count, setCount] = useState(4);\\nfunction decrementCount () {\n            setCount(count-1);\\n}\\nfunction incrementCount () {\n            setCount(count+1);\\n}`}\n        </pre>\n        <div>\n          <button className=\"button\" onClick={decrementCount}>-</button>\n          <span>{count}</span>\n          <button className=\"button\" onClick={incrementCount}>+</button>\n        </div>\n\n      </div>\n\n      <div className=\"App\">\n        <pre className=\"left\">\n          {`const [count, setCount] = useState(4);\\nfunction decrementCount () {\n            setCount(count-1)\n            setCount(count-1);\\n}\\nfunction incrementCount () {\n            setCount(count+1);\n            setCount(count+1);\\n}`}\n        </pre>\n        <div>\n          <button className=\"button\" onClick={decrementCount1}>-</button>\n          <span>{count1}</span>\n          <button className=\"button\" onClick={incrementCount1}>+</button>\n        </div>\n      </div>\n\n      <div className=\"App\">\n        <pre className=\"left\">\n          {`const [count, setCount] = useState(4);\\nfunction decrementCount () {\n            setCount2(prevCount => prevCount-1);\n            setCount2(prevCount => prevCount-1);\\n}\\nfunction incrementCount () {\n              setCount2(prevCount => prevCount-1);\n              setCount2(prevCount => prevCount-1);\\n}`}\n        </pre>\n        <div>\n          <button className=\"button\" onClick={decrementCount2}>-</button>\n          <span>{count2}</span>\n          <button className=\"button\" onClick={incrementCount2}>+</button>\n        </div>\n      </div>\n\n      <div className=\"App\">\n        <pre className=\"left\">\n          {`const [count, setCount] = useState(countInitial());\\nfunction decrementCount () {\n            setCount2(prevCount => prevCount-1);\\n}\\nfunction incrementCount () {\n              setCount2(prevCount => prevCount-1);;\\n}`}\n        </pre>\n        <div>\n          <button className=\"button\" onClick={decrementCount3}>-</button>\n          <span>{count3}</span>\n          <button className=\"button\" onClick={incrementCount3}>+</button>\n        </div>\n        <pre className=\"right\">{`function countInitial() {\n    counter++;\n    console.log(counter:`} <span style={{color: \"red\", fontSize: \"1rem\"}}>{counter}</span>{`);\n    return 4;\\n}`}</pre>\n      </div>\n\n      <div className=\"App\" style={{backgroundColor: theme1}}>\n        <pre className=\"left\">\n          {`const [state1, setState1] = useState({count: 5, theme: \"#ffff00\"});\\nfunction decrementCount () {\n            setState(prevState => {\n              return {count: prevState.count+1}\\n});}\\nfunction incrementCount () {\n              setState(prevState => {\n                return {count: prevState.count+1}\\n});}`}\n        </pre>\n        <div>\n          <button className=\"button\" onClick={decrementCount4}>-</button>\n          <span>{count4}</span>\n          <button className=\"button\" onClick={incrementCount4}>+</button>\n        </div>\n        <pre className=\"right\">{`function countInitial() {\n    counter++;\n    console.log(counter:`} <span style={{color: \"red\", fontSize: \"1rem\"}}>{counter}</span>{`);\n    return 4;\\n}`}</pre>\n      </div>\n\n      <div className=\"App\" style={{backgroundColor: theme2}}>\n        <pre className=\"left\">\n          {`const [state1, setState1] = useState({count: 5, theme: \"#ffff00\"});\\nfunction decrementCount () {\n            setState(prevState => {\n              return {...prevState, count: prevState.count+1}\\n});}\\nfunction incrementCount () {\n              setState(prevState => {\n                return {...prevState, count: prevState.count+1}\\n});}`}\n        </pre>\n        <div>\n          <button className=\"button\" onClick={decrementCount5}>-</button>\n          <span>{count5}</span>\n          <button className=\"button\" onClick={incrementCount5}>+</button>\n        </div>\n        <pre className=\"right\">{`function countInitial() {\n    counter++;\n    console.log(counter:`} <span style={{color: \"red\", fontSize: \"1rem\"}}>{counter}</span>{`);\n    return 4;\\n}`}</pre>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}